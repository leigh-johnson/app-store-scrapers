version: '2'

volumes:
  postgres_data_local: {}
  postgres_backup_local: {}


services:
  django: &django
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: app_store_scrapers_local_django
    depends_on:
      - postgres
      - mailhog
      - elasticsearch
      - appium
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start.sh

  elasticsearch: 
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node

  appium:
    build:
      context: .
      dockerfile: ./compose/local/appium/Dockerfile
    image: app_store_scrapers_production_appium
    ports:
      - "4723:4723"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: app_store_scrapers_production_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - postgres_backup_local:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    image: redis:3.0

  celeryworker:
    <<: *django
    image: app_store_scrapers_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports: []
    command: /start-celeryworker.sh

  celerybeat:
    <<: *django
    image: app_store_scrapers_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports: []
    command: /start-celerybeat.sh
